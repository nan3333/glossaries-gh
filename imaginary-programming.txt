reality
Θ
    [#probability theory]
    [#KL divergence]

estimate
ω
    [#probability theory]
    [#KL divergence]

sense
    What constitutes as untrue when using a
    language model as a basis for truth?

    That depends on sense of the model for
    this particular task.

    The sense is the truth orientation, in a
    similar way to the way the word sense is
    used in the definition of a vector.

imaginary reflection
    This is where a program such as a complex
    interpreter can access knowledge of its
    holographic representation via a language
    model.

internal imaginary reflection
    This is reflection but where the program
    consults a LM for information on its own
    source.

external imaginary reflection
    This is reflection but where the program
    consults a LM for information on the way
    the program is used in the real world.

holographic representation
    The embedding of the way software is used
    within a language model that has been
    trained on the usage of that software,
    whether it is usage of the final program
    or usage of its internal source code
    within itself.

    THe holographic representation of software
    encompasses the way a program's source
    code is used both within itself and also
    in the real world as modelled by a
    language model.

complex interpreter
    This is a real/ordinary interpreter with
    an interactivity layer that solicits a
    language model for imaginary reflection
    capabilities to the real program.

chimeric
chimerism
    NLG: Program that is not in any way
    written in a language known to the
    programmer
    
    chimerism is exhibited in other parts of
    GPT generations. For example, generated
    URLs. Generated URLs are usually not
    correct due to chimerism. It would be
    interesting to generate imaginary websites
    using chimeric URLs.

evaluator
    Not every interpreter is an evaluator.

interpreter
    [evaluator]

    https://youtu.be/OyfBQmvr2Hc?t=1843

imaginarily
    [#english]

    Having existence only in the imagination;
    unreal.

complex programming
    A complex terminal has braided imaginary
    programming with real programming.

    The word complex is suitable because it
    describes this braiding along with the
    mathematical connotations of complex
    numbers.

    We could further extend this terminology
    to include complex programming in the
    realm of imaginary programming to describe
    a programming style that combines both
    real programming with imaginary
    programming.

imaginary programming
IP
    A programming paradigm in which a computer
    program's behaviour exists in relativity to
    language models.

    To make an analogy, imaginary programming
    is a type of programming, where much like
    pure-functional, the code who's behaviour
    depends on the output of a language model,
    either pending or precomputed, stands
    apart from the part that has no such
    association.

    What is deemed 'imaginary' is code that
    uses or is waiting on output from a
    language model and its behaviour is so
    altered by it.

    What is deemed 'ordinary' is code which is
    not 'imaginary'.

    A distinction is made between grounded and
    non-grounded imaginary programming.
    'Non-grounded imaginary programming' may
    also be called 'pure imaginary
    programming'.

grounded
grounded imaginary programming
non-grounded
pure imaginary programming
tethered
    If a function has a language model as a
    parameter affecting its behaviour and
    besides from that has no other imaginary
    inputs then it is considered 'grounded'.

    If a function has a language model as a
    parameter affecting its behaviour and
    contains other imaginary inputs then it is
    considered 'tethered'.

    If an imaginary function relies on the
    output of functions that have in the past
    used a language model as a parameter, but
    does not contain a reference to specific
    language model used then it is considered
    'non-grounded' or 'pure imaginary'.

    A function can be both tethered and pure
    imaginary.

    Pure imaginary code is still code in a
    similar way to how pure functional code is
    considered code and may be used to create
    useful datastructures and algorithms.

ordinary programming
    Programming with functions that do not
    have an imaginary dimension (they do not
    take a language model as a parameter and
    the result of ordinary code is not
    polluted by a language model).

holographic programming
    [type of imaginary programming]

    This is like imaginary programming but
    where the language models are trained on
    software.

    Holographic code, therefore, may employ
    associations made between elements of the
    original code, how that code is used and
    how it is described, to build
    applications.

    Holographic programming lets you use the
    latent space of a language model as a kind
    of hyperspace to enable things like:
    - bridge the usage of an application with
      the application's code
    - imaginary reflection
    - inference in place of computation

literate programming
    NLG: A programming paradigm that
    emphasizes the importance of the reading
    and writing of code over the importance of
    the design of the code.